#
#	Set up third-party dependencies for libwfa
#

include(CheckCXXSourceCompiles)

#   Test drand48
#
check_cxx_source_compiles("
#include<cstdlib>
int main() {
  double d = drand48();
  return 0;
}
" HAVE_DRAND48)
if(HAVE_DRAND48)
    add_definitions(-DHAVE_DRAND48)
endif(HAVE_DRAND48)


#
#	Find armadillo
#
set(ARMADILLO_ROOT $ENV{ARMADILLO_ROOT} CACHE PATH
    "Path of Armadillo C++ linear algebra library (only set if non-standard)")
set(SAVED_CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH})
if(ARMADILLO_ROOT)
    set(CMAKE_PREFIX_PATH "${ARMADILLO_ROOT}" "${ARMADILLO_ROOT}/usr" "${ARMADILLO_ROOT}/usr/local")
endif(ARMADILLO_ROOT)

find_package(Armadillo REQUIRED)
if(ARMADILLO_FOUND)
    set(WITH_ARMADILLO TRUE)
endif(ARMADILLO_FOUND)

set(CMAKE_PREFIX_PATH ${SAVED_CMAKE_PREFIX_PATH})
unset(SAVED_CMAKE_PREFIX_PATH)


# TODO: check which min version is required
if("${ARMADILLO_VERSION_STRING}" VERSION_LESS "3.6.2")
	message(FATAL_ERROR
		"Armadillo library is too old. Please upgrade to >= 3.6.2")
endif()

#
#	libwfa dependencies
#
message(STATUS "ARMADILLO_INCLUDE_DIRS: ${ARMADILLO_INCLUDE_DIRS}")

include_directories(${ARMADILLO_INCLUDE_DIRS})

if(ARMA_HEADER)
    add_definitions(-DARMA_DONT_USE_WRAPPER)
else()
    message(STATUS "ARMADILLO_LIBRARIES: ${ARMADILLO_LIBRARIES}")
    set(LIBWFA_DEP_LIBS ${ARMADILLO_LIBRARIES})
endif(ARMA_HEADER)

#
#   Find HDF5 if MOLCAS_LIB or MOLCAS_EXE option is requested
#
if(MOLCAS_LIB)
     find_package (HDF5 COMPONENTS C CXX)
     include_directories(${HDF5_INCLUDE_DIRS})
     list (APPEND LIBWFA_DEP_LIBS ${HDF5_C_LIBRARIES})
     list (APPEND LIBWFA_DEP_LIBS ${HDF5_CXX_LIBRARIES})
endif(MOLCAS_LIB)

if(MOLCAS_EXE)
     find_package (HDF5 COMPONENTS C CXX)
     include_directories(${HDF5_INCLUDE_DIRS})
     list (APPEND LIBWFA_DEP_LIBS ${HDF5_C_LIBRARIES} ${HDF5_CXX_LIBRARIES})

     find_package(BLAS REQUIRED)
     find_package(LAPACK REQUIRED)
     list (APPEND LIBWFA_DEP_LIBS ${BLAS_LIBRARIES} ${LAPACK_LIBRARIES})
endif(MOLCAS_EXE)
#if(MOLCAS_EXE)
#    FIND_PACKAGE(HDF5 NAMES hdf5)
#    if(NOT HDF5_FOUND)
#        FIND_PACKAGE(HDF5) # Find non-cmake built HDF5
#    endif(NOT HDF5_FOUND)
#    if(HDF5_FOUND)
#        INCLUDE_DIRECTORIES(${HDF5_INCLUDE_DIR})
#        message(STATUS "HDF5 libraries found: ${HDF5_LIBRARIES}")
#        message(STATUS "HDF5 include directory: ${HDF5_INCLUDE_DIR}")
#    else(HDF5_FOUND)
#        message(FATAL_ERROR "HDF5 library not found but is required for MOLCAS interface of LibWFA.")
#    endif(HDF5_FOUND)
#endif(MOLCAS_EXE)
